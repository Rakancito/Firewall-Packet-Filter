ext_if="ix0"

ssh_port="{ 6969 }"
mysql_port="{ 3306 }"
game_ports="{ 30301, 30003, 30005, 30007, 30009, 30011, 30013, 30015, 30017, 30019 }"
auth_ports="{ 30301}"
db_port="{ 30000 }"
http_server="{ 39691 }"
full_port="{ 30301, 30003, 30005, 30007, 30009, 30011, 30013, 30015, 30017, 30019, 30000 }"
icmp_types = "{ echoreq, unreach }"
srv_port_out = "{80, 443, 21, 25, 53}"

table <trusted_hosts> persist
table <abusive_hosts> persist
table <http_banned> persist
table <mysql_allowed> persist
table <WebsiteAllowed> { 127.0.0.1 }
freebsdrepo="{last.public.ovh.rtm.snap.mirrors.ovh.net,last-public-ovh-metrics.snap.mirrors.ovh.net,freebsd.org,FreeBSD.org,vuxml.freebsd.org,pkg.FreeBSD.org}"

# options
set skip on lo0
set block-policy drop
set loginterface $ext_if
set optimization aggressive
set limit { states 10000000, frags 20000, src-nodes 100000, table-entries 1000000 }

### Normalize traffic
scrub in on $ext_if all fragment reassemble
scrub on $ext_if reassemble tcp no-df random-id
scrub out all

### block anything coming from sources that we have no back routes for.
block in from no-route to any

### block packets that fail a reverse path check. we look up the routing
### table, check to make sure that the outbound is the same as the source
### it came in on. if not, it is probably source address spoofed.
block in from urpf-failed to any

### drop broadcast requests quietly.
block in quick on $ext_if from any to 255.255.255.255

### block packets claiming to come from reserved internal address blocks, as
### they are obviously forged and cannot be contacted from the outside world.
block in log quick on $ext_if from { 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 255.255.255.255/32 } to any

#Antispoof
antispoof for $ext_if

##rules
#block by defaut
#block all

### block probes that can possibly determine our operating system by disallowing
### certain combinations that are commonly used by nmap, queso and xprobe2, who
### are attempting to fingerprint the server.
### * F : FIN  - Finish; end of session
### * S : SYN  - Synchronize; indicates request to start session
### * R : RST  - Reset; drop a connection
### * P : PUSH - Push; packet is sent immediately
### * A : ACK  - Acknowledgement
### * U : URG  - Urgent
### * E : ECE  - Explicit Congestion Notification Echo
### * W : CWR  - Congestion Window Reduced
block in quick on $ext_if proto tcp flags FUP/WEUAPRSF
block in quick on $ext_if proto tcp flags WEUAPRSF/WEUAPRSF
block in quick on $ext_if proto tcp flags SRAFU/WEUAPRSF
block in quick on $ext_if proto tcp flags /WEUAPRSF
block in quick on $ext_if proto tcp flags SR/SR
block in quick on $ext_if proto tcp flags SF/SF
### keep state on any outbound tcp, udp or icmp traffic. modulate the isn of
### outgoing packets. (initial sequence number) broken operating systems
### sometimes don't randomize this number, making it guessable.
pass out on $ext_if proto { tcp, udp, icmp } from any to any modulate state

## Allow Website
pass in quick proto tcp from <WebsiteAllowed> to any port $mysql_port

############################## Block/ Allow ##############################
pass in quick proto tcp from <mysql_allowed> to any port $mysql_port
block in quick proto tcp to any port $mysql_port
block in quick proto tcp from <http_banned> to any port $full_port
pass in quick from <trusted_hosts>
block in quick from <abusive_hosts>
#block in quick proto tcp to any port $auth_ports
#block in quick proto tcp to any port $game_ports

# Allow SSH & MYSQL to IP
pass in log on $ext_if proto tcp to 158.69.22.225 port $mysql_port
# pass in log on $ext_if proto tcp to 158.69.22.225 port $ssh_port

## Allow FreeBSD Repositories
pass quick log on $ext_if proto {tcp,udp} from any to $freebsdrepo keep state

## TCP Rate-Limit Configs
pass in on $ext_if proto tcp to any port $game_ports flags S/SA keep state (max-src-conn 50, max-src-conn-rate 15/1, overload <abusive_hosts> flush)
# pass in on $ext_if proto tcp to any port $ssh_port flags S/SA keep state (max-src-conn 6, max-src-conn-rate 7/3, overload <abusive_hosts> flush)
pass in on $ext_if proto tcp to any port $auth_ports synproxy state (max-src-conn 25, max-src-conn-rate 15/1, overload <abusive_hosts> flush)
pass in on $ext_if proto tcp to any port $http_server synproxy state (max-src-conn 30, max-src-conn-rate 15/1, overload <http_banned> flush)

## Allow Traffic Out
# pass out inet proto {tcp, udp} from 158.69.22.225 to any port $srv_port_out

## ICMP Rules
#pass log inet proto icmp all icmp-type $icmp_types keep state # Allow ICMP
block in on $ext_if inet proto icmp all # Block ICMP
